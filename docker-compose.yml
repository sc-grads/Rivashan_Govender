version: '3.8'

services:
      
  main_app:
    build:
      context: ./main_app
      dockerfile: DockerFile
    ports:
      - "8000:8000"
    volumes:
      - ./main_app:/app 
    depends_on:
      - user_service
      - product_service
      - payment_service  # Added payment_service dependency
      - order_service    # Added order_service dependency
      - cart_service     # Added cart_service dependency
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  user_service:
    build:
      context: ./user_service
      dockerfile: DockerFile
    ports:
      - "8002:8000"
    volumes:
      - ./user_service:/app
      - ./main_app/Frontend/templates:/app/templates
      - ./main_app/static/images:/app/static
      - ./data:/app/data 
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  product_service:
    build:
      context: ./product_service
      dockerfile: DockerFile
    ports:
      - "8001:8000"
    volumes:
      - ./product_service:/app
      - ./main_app/Frontend/templates:/app/templates
      - ./main_app/static/images:/app/static
      - ./data:/app/data # Using named volume for product db
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  payment_service:  # New payment service
    build:
      context: ./payment_service
      dockerfile: DockerFile
    ports:
      - "8003:8000"  # Expose payment service on port 8003
    volumes:
      - ./payment_service:/app
      - ./data:/app/data  # Ensure access to the database
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  order_service:  # New order service
    build:
      context: ./order_service
      dockerfile: DockerFile
    ports:
      - "8004:8000"  # Expose order service on port 8004
    volumes:
      - ./order_service:/app
      - ./data:/app/data  # Ensure access to the database
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  cart_service:  # New cart service
    build:
      context: ./cart_service
      dockerfile: DockerFile
    ports:
      - "8005:8000"  # Expose cart service on port 8005
    volumes:
      - ./cart_service:/app
      - ./data:/app/data  # Ensure access to the database
    environment:
      - DATABASE_URL=sqlite:///app/data/Recipe.db # Ensure consistency
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    volumes:
      - ./main_app/Frontend/templates:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - main_app
      - user_service
      - product_service
      - payment_service  # Added payment_service dependency
      - order_service    # Added order_service dependency
      - cart_service     # Added cart_service dependency
    networks:
      - app-network

volumes:
  data:
    driver: local

networks:
  app-network:
    driver: bridge
